cmake_minimum_required(VERSION 3.28.0)
project(cqy VERSION 0.1.0 LANGUAGES C CXX)
set(CMAKE_CXX_STANDARD 20)  
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fcoroutines")
    if (CMAKE_CXX_COMPILER_VERSION MATCHES "12.*")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-maybe-uninitialized")
    endif()
endif()

link_libraries(yalantinglibs::yalantinglibs)
add_executable(ping cqy.h ping.cpp)
add_executable(pong cqy.h pong.cpp)
add_subdirectory(3rd/yalantinglibs)

if(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
    message(STATUS "Using gcc compiler.")
    add_compile_options(-fsanitize=address -g)
    target_link_libraries(ping PRIVATE asan)
    target_link_libraries(pong PRIVATE asan)
else()
    add_compile_options("/wd4819")
    add_compile_options("/wd4267")
endif()
